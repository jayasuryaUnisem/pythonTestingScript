import RPi.GPIO as gpio
import serial
import time
import json

ts_led = 21
sd_led = 20
imei_led = 16
ssm_led = 12
psm_led = 1
bme_led = 7
lw_led = 8
ws_led = 25
dr_led = 24
st_led = 23
lux_led = 18

gpio.setwarnings(False)
gpio.setmode(gpio.BCM)
gpio.setup(ts_led, gpio.OUT)
gpio.setup(sd_led, gpio.OUT)
gpio.setup(imei_led, gpio.OUT)
gpio.setup(ssm_led, gpio.OUT)
gpio.setup(psm_led, gpio.OUT)
gpio.setup(bme_led, gpio.OUT)
gpio.setup(lw_led, gpio.OUT)
gpio.setup(ws_led, gpio.OUT)
gpio.setup(dr_led, gpio.OUT)
gpio.setup(st_led, gpio.OUT)
gpio.setup(lux_led, gpio.OUT)

#Serial Communication configs
ser = serial.Serial("/dev/ttyUSB0", 115200)


#Defined or Default Setpoint for compare the sensor values
setP_hw = 3.0
setP_fw = 2.0
setP_at_min = 23.0
setP_at_max = 30.0
setP_ap_min = 8000.0
setP_ap_max = 10000.0
setP_ah_min = 40.0
setP_ah_max = 80.0
setP_lw = 20
setP_rain = 0.2
setP_ws = 0.2
setP_st_min = 20
setP_st_max = 32
setP_psm_min = 5900
setP_psm_max = 8000
setP_ssm_min = 5900
setP_ssm_max = 8000
setP_li = 2
setP_rd = 5


#Fuction for sensor value test and indication
def check(imei, hw_ver, firm_ver, air_temp, air_p, air_humidity, leaf_wetness, rain, wind_dir, wind_speed, soil_temp, p_soil_mois, s_soil_mois, light_inten, solar_radi):
    print("***********************************")
    if(len(imei)==15):
        print("IMEI Done")
        gpio.output(imei_led, gpio.HIGH)
    else:
        print("IMEI Failed")
        gpio.output(imei_led, gpio.LOW)

    if(hw_ver==setP_hw):
        print("Hardware Version Done")
    else:
        print("Hardware Version Failed")

    if(firm_ver==setP_fw):
        print("Firmware Version Done")
    else:
        print("Firmware Version Failed")

    if((air_temp > setP_at_min and air_temp < setP_ah_max) and (air_p > setP_ap_min and air_p < setP_ap_max) and (air_humidity > setP_ah_min and air_humidity < setP_ah_max)):
        print("BME Sensor Test Done")
        gpio.output(bme_led, gpio.HIGH)
    else:
        print("BME Sensor Test Failed")
        gpio.output(bme_led, gpio.LOW)

    if(leaf_wetness > setP_lw):
        print("Leaf Wetness Done")
        gpio.output(lw_led, gpio.HIGH)
    else:
        print("Leaf Wetness Failed")
        gpio.output(lw_led, gpio.LOW)

    if((rain > setP_rain) and (len(wind_dir)>0)):
        print("Rain Sensor and Wind Direction Test Done")
        gpio.output(dr_led, gpio.HIGH)
    else:
        print("Rain Sensor and Wind Direction Test Failed")
        gpio.output(dr_led, gpio.LOW)

    if(wind_speed > setP_ws):
        print("Wind Speed Done")
        gpio.output(ws_led, gpio.HIGH)
    else:
        print("Wind Speed Failed")
        gpio.output(ws_led, gpio.LOW)

    if(soil_temp > setP_st_min and soil_temp < setP_st_max):
        print("Soil Temperature Test Done")
        gpio.output(st_led, gpio.HIGH)
    else:
        print("Soil Temperature Test Failed")
        gpio.output(st_led, gpio.LOW)

    if(p_soil_mois > setP_psm_min and p_soil_mois < setP_ah_max):
        print("Primery Soil Mositure Sensor Test Done")
        gpio.output(psm_led, gpio.HIGH)
    else:
        print("Primery Soil Mositure Sensor Test Failed")
        gpio.output(psm_led, gpio.LOW)

    if(s_soil_mois > setP_ssm_min and s_soil_mois < setP_ssm_max):
        print("Secondary Soil Mositure Sensor Test Done")
        gpio.output(ssm_led, gpio.HIGH)
    else:
        print("Secondary Soil Mositure Sensor Test Failed")
        gpio.output(ssm_led, gpio.LOW)

    if((light_inten > setP_li) and (solar_radi > setP_rd)):
        print("Lux Sensor Test Done")
        gpio.output(lux_led, gpio.HIGH)
    else:
        print("Lux Sensor Test Failed")
        gpio.output(lux_led, gpio.LOW)

    print("***********************************")


def setPointView():
    print("***********************************")
    print("Hardware Version: ", setP_hw)
    print("Firmware Version: ", setP_fw)
    print("Air Temperature min setpoint: ",
          setP_at_min, ", max setpoint: ", setP_at_max)
    print("Air Pressure min setpoint: ", setP_ap_min,
          ", Air Pressure max setpoint: ", setP_ap_max)
    print("Air Humidity min setpoint: ", setP_ah_min,
          "Air Humidity max setpoint: ", setP_ah_max)
    print("Leaf Wetness setpoint: ", setP_lw)
    print("Rain in MM setpoint: ", setP_rain)
    print("Wind Speed setpoint: ", setP_ws)
    print("Soil Temperature min setpoint: ", setP_at_min,
          ", Soil Temperature max setpoint: ", setP_st_max)
    print("Primery Soil Mositure min setpoint: ", setP_psm_min,
          "Primery Soil Mositure max setpoint: ", setP_psm_max)
    print("Secondary Soil Mositure min setpoint: ", setP_ssm_min,
          "Secondary Soil Mositure max setpoint: ", setP_ssm_max)
    print("Light Intensity Setpoint: ", setP_li)
    print("Solar Radiation: ", setP_rd)
    print("***********************************")


#option for change the setpoint and check the setpoints --> This should happen before the main loop
def optionCheck():
    value = int(input(
        "1. For check the default values\n2. For change the default values\nPlease Enter the option:"))
    if value == 1:
        setPointView()
    elif value == 2:
        print("***********************************")
        setP_hw = float(input("Enter Hardware Version: "))
        setP_fw = float(input("Enter Firmware Version: "))
        setP_at_min = float(input("Enter Air Temperature Min Setpoint: "))
        setP_at_max = float(input("Enter Air Temperature Max Setpoint: "))
        setP_ap_min = float(input("Enter Air Pressure Min Setpoint: "))
        setP_ap_max = float(input("Enter Air Pressure Max Setpoint: "))
        setP_ah_min = float(input("Enter Air Humidity Min Setpoint: "))
        setP_ah_max = float(input("Enter Air Humidity Max Setpoint: "))
        setP_lw = int(input("Enter Leaf Wetness Setpoint: "))
        setP_rain = float(input("Enter Rain in mm Setpoint: "))
        setP_ws = float(input("Enter Wind speed Setpoint: "))
        setP_st_min = int(input("Enter Soil Temperature min Setpoint: "))
        setP_st_max = int(input("Enter Soil Temperature max Setpoint: "))
        setP_psm_min = int(input("Enter Primery Soil Moisture Min Setpoint: "))
        setP_psm_max = int(input("Enter Primery Soil Moisture Max Setpoint: "))
        setP_ssm_min = int(input("Enter Secondry Soil Mositure Min Setpoint: "))
        setP_ssm_max = int(input("Enter Secodary Soil Mositure Max Setpoint: "))
        setP_li = int(input("Enter Light Intersity Setpoint: "))
        setP_rd = int(input("Enter Solar Radation Level Setpoint: "))
        print("***********************************")
        print("")

    value = int(input("1. Home Menu\n2. Exit and Enter to the main Loop\nEnter the Option: "))
    if value == 1:
        optionCheck() #recursion funtion
    elif value == 2:
        print("Entering into the main loop")
    else:
        print("Entering into the main loop")


#this function should enable when using only in the raspberry Pi
#optionCheck()


#main loop starts from here
while True:
    cc = ser.readline()
    #cc = cc.rstrip().lstrip() #remove r' (raw string)
   # cc = str(cc, 'utf-8') #remove b' (byte string to string)
#    print(cc)
    if(len(cc) > 0):  #len should be greater than 0
        #print(".")
	print(cc)
        if(cc == "Device Powered ON"):
            print("***********************************")
            print("Device on Ack received")
            print("***********************************")

        if(cc == "Lux Available = 1"):
            print("\n***********************************")
            print("Lux Sensor Connected")
            print("***********************************")

        if(cc == "Rain Counter Available = 1"):
           print("\n***********************************")
           print("Rain Sensor Connected"           print("***********************************")

        if(cc == "Rain counter initilization done.."):
            print("\n***********************************")
            print("Rain Counter Initilization Done. Do 4 Tik")
            print("***********************************")

        if(cc == "<<< MSG: SD card initialization Successful! >>>"):
            print("\n***********************************")
            print("SD Card Initialization Done")
            print("***********************************")

        if(cc == "mcu sleep"):
            print("\n***********************************")
            print("Sleep Mode")
            print("***********************************")


        if(cc[0] == '{'): #JSON fromat starts from {
            tempJson = json.loads(cc)
            imei = tempJson.get("Z1")
            hw_ver = float(tempJson.get("Z4"))
            firm_ver = float(tempJson.get("Z8"))
            air_temp = float(tempJson["Z5"]["A"])
            air_pressure = float(tempJson["Z5"]["B"])
            air_humidity = float(tempJson["Z5"]["C"])
            leaf_wetness = int(tempJson["Z5"]["D"])
            rain = float(tempJson["Z5"]["E"])
            wind_dir = tempJson["Z5"]["F"]
            wind_speed = float(tempJson["Z5"]["G"])
            soil_temp = float(tempJson["Z5"]["H"])
            p_soil_mois = int(tempJson["Z5"]["I"])
            s_soil_mois = int(tempJson["Z5"]["J"])
            light_int = tempJson["Z5"]["O"]
            solar_radi = tempJson["Z5"]["P"]
            #print("IMEI number: ", tempJson.get("Z1"))
            print("***********************************")
            print("IMEI: ", imei)
            print("Hardware Version: ", hw_ver)
            print("firmware Version: ", firm_ver)
            print("Air Temperature: ", air_temp)
            print("Air Pressure: ", air_pressure)
            print("Air Humidity: ", air_humidity)
            print("Leaf Wetness: ", leaf_wetness)
            print("Rain in mm: ", rain)
            print("Wind Direction: ", wind_dir)
            print("Wind Speed: ", wind_speed)
            print("Soil Temperature: ", soil_temp)
            print("Primary Soil Mositure: ", p_soil_mois)
            print("Secondary Soil Moisture: ", s_soil_mois)
            print("Light Intensity: ", light_int)
            print("Solar Radiation: ", solar_radi)
            print("***********************************")
            check(imei, hw_ver, firm_ver, air_temp, air_pressure, air_humidity, leaf_wetness,
            rain, wind_dir, wind_speed, soil_temp, p_soil_mois, s_soil_mois, light_int, solar_radi)
